---
import Layout from '../layouts/Layout.astro';
import '../assets/styles/reset.css';
import '../assets/styles/global.css';
import About from '../components/About.astro';
import Quote from '../components/Quote.astro';
import Send from '../assets/icons/send.svg';

import { getCollection } from "astro:content";
import { quotelessJson } from 'astro:schema';
const quotes = await getCollection("quotes")

interface Props {
  quote: string;
  author: string;
}

const { quote, author } = Astro.props;

import FeaturedProjects from '../components/FeaturedProjects.astro';
---

<Layout>
  
  <section class="hero">
    <h2 class="saludo">Hi <span class="greeting"></span>, I'm Deanny!</h2>
    <h1 class="title">Frontend Developer</h1>
    <p class="frase">"I code efficient, accessible, and delightful web experiences."</p>
    <button class="btn__contact btn--action">Connect with me</button>
  </section>
  
  <section class="slider" id="slider" >
    {
      quotes.map((quote)=>{
        return (
        <Quote 
        quote={quote.data.quote} 
        author={quote.data.author} 
        id={quote.id}
        />
        )
      })
    }
  </section>

  <section class="featured-projects-index">

    <h2 class="subtitle">Some My <span class="subtitle__span">Featured Projects</span></h2>
    
    <FeaturedProjects />

  </section>

  <section class="connect">
    <button class="btn--action">
      Let's get in touch <Send />
    </button>
  </section>
  
  
</Layout>


<style>
  /*Hero*/
  .hero {
    height: 90dvh;
    display: grid;
    gap: 10px;
    justify-items: center;
    align-items: center;
    align-content: center;
  }

  .title {
    font-size: 5rem;
    font-weight: 700;
    color: #fff;
    text-align: center;
  }
  .saludo {
    font-size: 2.5rem;
    font-weight: 600;
    color: #fff;
    text-align: center;
    
  }
  .frase {
    font-size: 2.2rem;
    font-style: italic;
    color: #fff;
    text-align: center;
    max-width: 600px;
  }
  
  .btn__contact {
    display: block;
    padding: 15px 30px;
    font-size: 1.5rem;
    font-weight: 600;
    color: #fff;
    background-color: var(--background-color);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
    margin-top: 20px;
  }
  
  .btn__contact:hover {
    background-color: var(--background-color-hover);
    transform: scale(1.05);
  }
  
  .greeting {
    font-weight: 600;
    color: var(--secondary-color); 
    border-radius: 20px;
    padding: 0 10px;
    border: 1px solid var(--border-color); 
  }
  
  /* Slider of quotes */
  
  .slider {
    width: 100%;
    max-width: 120em;
  }
  .slider {
    width: 80dvw;
    margin: auto;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    padding: 1em;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scrollbar-width: none;
    scroll-marker-group: after;
    scroll-behavior: smooth;
    anchor-name: --slider;
    margin-bottom: 3lh;
    scroll-snap-stop: always;
  }
  .slider::scroll-marker-group{
    display: flex;
    position: fixed;
    position-anchor: --slider;
    position-area: bottom center;
  }
  
  /*Section: Featured-projects*/
  
  .subtitle {
    width: 100%;
    font-size: 3.5rem;
    color: var(--text-color);
    text-align: center;
  }

  .subtitle__span {
    color: var(--secondary-color);
  }

  .featured-projects-index {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    padding: 5rem;
    
  }

  /* Section: Connect*/

  .connect {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 50px;
  }

  .btn--action {
    width: auto;
    height: 60px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    border-radius: 20px;
    position: relative;
    gap: 5px;
    border: none;
    background-color: var(--primary-color);
    color: var(--text-color);
    padding: 21px;
  }

  @property --angulo {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

  .btn--action::after, .btn--action::before {
    content: '';
    background: conic-gradient(from var(--angulo), #390f74, #c38cf6, #390f74 );
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: -5;
    padding: 2px;
    box-sizing:unset;
    border-radius: 20px;
    animation: girar 3s linear infinite;
  }

  .btn--action::before {
    filter: blur(64px);
    opacity: 0.5;
  }

  @keyframes girar {
    0%{
      --angulo: 0deg;
    }
    100%{
      --angulo: 360deg;
    }
  }
</style>




<script is:inline>
  
  function obtenerSaludo() {
    const horaActual = new Date().getHours();
    if (horaActual < 12) {
      return "Good morning";
    } else if (horaActual < 18) {
      return "Good afternoon";
    } else {
      return "Good evening";
    }
  }
  
  document.querySelector('.greeting').textContent = obtenerSaludo();
  
  document.querySelector('.btn__contact').addEventListener('click', () => {
    alert('Thank you for your interest! I will get back to you soon.');
  });
  
  
  //Slider phrases
  function autoScroll(){
    const slider = document.querySelector("#slider");
    const quotes = slider.querySelectorAll('.quote');
    let initial=0;
    function autoScrollInterval(){
      return setInterval(function(){
        if(initial>(quotes.length-1)){
          initial=0
        }
        const quoteTo=quotes[initial]
        slider.scrollTo(quoteTo.offsetLeft,0);
        initial++;
      }, 3000);
    }
    let interval=autoScrollInterval()
    
    slider.addEventListener("mouseenter",()=>{
      clearInterval(interval);
    })
    slider.addEventListener("mouseleave",()=>{
      interval = autoScrollInterval();
    })
  }
  autoScroll();
</script>


