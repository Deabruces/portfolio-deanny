---
import Home from "../assets/icons/home.svg";
import Moon from "../assets/icons/moon.svg";
import Sun from "../assets/icons/sun.svg";
import Person from "../assets/icons/person.svg";
import Projects from "../assets/icons/projects.svg";
import Blog from "../assets/icons/blog.svg";
import "../assets/styles/reset.css";
import "../assets/styles/global.css";
import Send from "../assets/icons/send.svg";
const actualPage = Astro.url.pathname;
interface MenuElement {
  name: string;
  icon: ImageMetadata; // Replace with the actual type of your icons if available
  path: string;
}
const menuElements: MenuElement[] = [
  { name: "About", icon: Person, path: "/about-me" },
  { name: "Projects", icon: Projects, path: "/projects" },
  { name: "Blog", icon: Blog, path: "/blog" },
  { name: "Contact", icon: Send, path: "/contact" },
];
const isActualPage = (element: Partial<MenuElement>) => {
  return Astro.url.pathname === element.path;
};
---

<nav>
  <ul>
    <li class:list={["li__home", { active: isActualPage({ path: "/" }) }]}>
      <a href="/"><Home /></a>
    </li>
    <li class="li__separador"><span class="separator"></span></li>
    {
      menuElements.map((element) => (
        <li class:list={["li__nav", { active: isActualPage(element) }]}>
          <a href={element.path}>{element.name}</a>
        </li>
      ))
    }
    <li class="li__separador"><span class="separator"></span></li>
    <li class="toggle__theme">
      <button class="theme__btn btn__dark"><Moon /></button>
      <button class="theme__btn btn__light"><Sun /></button>
    </li>
  </ul>
</nav>

<style>
  nav {
    display: flex;
    background-color: #2d0c4b5e;
    color: white;
    border: 1px solid #180628;
    border-radius: 20px;
    backdrop-filter: blur(10px);
    font-size: 20px;
  }
  ul {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: row;
    gap: 3px;
    padding-inline-start: 0px;
    padding: 3px 3px;
  }

  .separator {
    background: #180628;
    height: 1lh;
    display: block;
    width: 1px;
    border-radius: 5px;
  }

  li {
    list-style-type: none;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 5px;
    padding: 5px 15px;
  }

  li.active {
    font-weight: bold;
    color: var(--secondary-color);
  }

  a {
    color: inherit;
    font-size: 1.3rem;
  }

  .li__nav {
    transition: all 0.3s ease;
  }

  .li__nav:hover {
    border: 1px solid #62586a;
    border-radius: 20px;
    padding: 5px 17px;
    color: var(--secondary-color);
  }

  .li__home {
    border: 1px solid #62586a;
    border-radius: 19px;
    padding: 8px 17px;
    background-color: rgb(40 47 107 / 30%);
    transition: background-color 300ms linear;
  }

  .li__home:hover {
    background-color: rgb(40 47 107 / 50%);
  }

  .li__separador {
    display: flex;
    align-items: center;
    padding: 0;
  }

  .toggle__theme {
    border: 1px solid var(--border-color);
    border-radius: 19px;
    padding: 8px 17px;
  }

  .theme__btn {
    appearance: none;
    border: none;
    border-radius: 19px;
    color: white;
    display: block;
    background-color: rgb(40 47 107 / 30%);
    transition: all 300ms linear;
  }

  .theme__btn:hover {
    background-color: rgb(40 47 107 / 50%);
    color: var(--secondary-color);
  }
</style>
